Q1


#include<stdio.h>
#include<stdlib.h>
#define MAXSIZE 20
typedef struct
{
int data[MAXSIZE];
int front,rear;
}QUEUE;
void initq(QUEUE *pq)
{
pq->front=pq->rear=-1;
}
void addq(QUEUE *pq,int n)
{
pq->data[++pq->rear]=n;
}
int removeq(QUEUE *pq)
{
return pq->data[++pq->front];
}
int isempty(QUEUE *pq)
{
return(pq->front==pq->rear);
}
void createlist(int m[10][10],int n)
{
int i,j;
printf("\n*PRESS 1 FOR YES(edge present) & 0 FOR NO(edge
not present)*\n");
for(i=0;i<n;i++)
{
// list[i]=NULL;
for(j=0;j<n;j++)
{
if(i!=j)
{
printf("\nIs there edge between %d & %d: ",i+1,j+1);
scanf("%d",&m[i][j]);
}
}
}
}
void bfs(int a[10][10],int n)
{
int v=0;
int visited[20]={0};
QUEUE q;
initq(&q);
printf("\nThe breadth first traversal is:\n");
visited[v]=1;
addq(&q,v);
while(!isempty(&q))
{
v=removeq(&q);
printf("v%d\t",v+1);
for(int w=0;w<n;w++)
{
if((a[v][w]==1)&&(visited[w]==0))
{
addq(&q,w);
visited[w]=1;
}
}
}
}
int main()
{
int a[10][10],n;
printf("\nEnter the no of vertex:");
scanf("%d",&n);
createlist(a,n);
bfs(a,n);
}